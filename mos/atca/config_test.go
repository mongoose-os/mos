package atca

import (
	"bytes"
	"encoding/hex"
	"testing"
)

var (
	testConfigGolden = [128]byte{
		0x01, 0x23, 0x52, 0xaa,
		0x00, 0x00, 0x50, 0x00,
		0xd1, 0xbb, 0xf3, 0x78,
		0xee, 0xc0, 0x01, 0x00,
		0xc0, 0x00, 0x55, 0x00,
		0x87, 0x64, 0x87, 0x64,
		0x87, 0x64, 0x87, 0x64,
		0x80, 0x0f, 0x8f, 0x8f,
		0x9f, 0x8f, 0x82, 0x20,
		0xc4, 0x44, 0xc4, 0x44,
		0x0f, 0x0f, 0x0f, 0x0f,
		0x0f, 0x0f, 0x0f, 0x0f,
		0x0f, 0x0f, 0x0f, 0x0f,
		0xff, 0xff, 0xff, 0xff,
		0x00, 0x00, 0x00, 0x00,
		0xff, 0xff, 0xff, 0xff,
		0x00, 0x00, 0x00, 0x00,
		0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff,
		0x00, 0x00, 0x00, 0x00,
		0xff, 0xff, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x33, 0x00, 0x33, 0x00,
		0x33, 0x00, 0x33, 0x00,
		0x3c, 0x00, 0x1c, 0x00,
		0x1c, 0x00, 0x33, 0x00,
		0x1c, 0x00, 0x1c, 0x00,
		0x3c, 0x00, 0x3c, 0x00,
		0x3c, 0x00, 0x3c, 0x00,
		0x1c, 0x00, 0x3c, 0x00,
	}
)

func TestParseAndWrite(t *testing.T) {
	c, err := ParseBinaryConfig(testConfigGolden[:])
	if err != nil {
		t.Fatalf("failed to parse golden config: %s", err)
	}
	cb, err := WriteBinaryConfig(c)
	if err != nil {
		t.Fatalf("failed to serialize golden config: %s", err)
	}
	if bytes.Compare(cb, testConfigGolden[:]) != 0 {
		t.Fatalf("serialized config does not match golden:\nExpected: %s\nGot     : %s",
			hex.EncodeToString(testConfigGolden[:]), hex.EncodeToString(cb))
	}
}
